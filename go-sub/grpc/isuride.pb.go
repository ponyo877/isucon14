// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: isuride.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppNotificationRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	RideID                string                 `protobuf:"bytes,1,opt,name=rideID,proto3" json:"rideID,omitempty"`
	PickupCoordinate      *Coordinate            `protobuf:"bytes,2,opt,name=pickupCoordinate,proto3" json:"pickupCoordinate,omitempty"`
	DestinationCoordinate *Coordinate            `protobuf:"bytes,3,opt,name=destinationCoordinate,proto3" json:"destinationCoordinate,omitempty"`
	Fare                  int32                  `protobuf:"varint,4,opt,name=fare,proto3" json:"fare,omitempty"`
	Status                string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Chair                 *Chair                 `protobuf:"bytes,6,opt,name=chair,proto3" json:"chair,omitempty"`
	CreatedAt             int64                  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdateAt              int64                  `protobuf:"varint,8,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AppNotificationRequest) Reset() {
	*x = AppNotificationRequest{}
	mi := &file_isuride_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNotificationRequest) ProtoMessage() {}

func (x *AppNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNotificationRequest.ProtoReflect.Descriptor instead.
func (*AppNotificationRequest) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{0}
}

func (x *AppNotificationRequest) GetRideID() string {
	if x != nil {
		return x.RideID
	}
	return ""
}

func (x *AppNotificationRequest) GetPickupCoordinate() *Coordinate {
	if x != nil {
		return x.PickupCoordinate
	}
	return nil
}

func (x *AppNotificationRequest) GetDestinationCoordinate() *Coordinate {
	if x != nil {
		return x.DestinationCoordinate
	}
	return nil
}

func (x *AppNotificationRequest) GetFare() int32 {
	if x != nil {
		return x.Fare
	}
	return 0
}

func (x *AppNotificationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AppNotificationRequest) GetChair() *Chair {
	if x != nil {
		return x.Chair
	}
	return nil
}

func (x *AppNotificationRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AppNotificationRequest) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type AppNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppNotificationResponse) Reset() {
	*x = AppNotificationResponse{}
	mi := &file_isuride_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNotificationResponse) ProtoMessage() {}

func (x *AppNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNotificationResponse.ProtoReflect.Descriptor instead.
func (*AppNotificationResponse) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{1}
}

type ChairNotificationRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	RideID                string                 `protobuf:"bytes,1,opt,name=rideID,proto3" json:"rideID,omitempty"`
	User                  *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	PickupCoordinate      *Coordinate            `protobuf:"bytes,3,opt,name=pickupCoordinate,proto3" json:"pickupCoordinate,omitempty"`
	DestinationCoordinate *Coordinate            `protobuf:"bytes,4,opt,name=destinationCoordinate,proto3" json:"destinationCoordinate,omitempty"`
	Status                string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChairNotificationRequest) Reset() {
	*x = ChairNotificationRequest{}
	mi := &file_isuride_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChairNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChairNotificationRequest) ProtoMessage() {}

func (x *ChairNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChairNotificationRequest.ProtoReflect.Descriptor instead.
func (*ChairNotificationRequest) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{2}
}

func (x *ChairNotificationRequest) GetRideID() string {
	if x != nil {
		return x.RideID
	}
	return ""
}

func (x *ChairNotificationRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ChairNotificationRequest) GetPickupCoordinate() *Coordinate {
	if x != nil {
		return x.PickupCoordinate
	}
	return nil
}

func (x *ChairNotificationRequest) GetDestinationCoordinate() *Coordinate {
	if x != nil {
		return x.DestinationCoordinate
	}
	return nil
}

func (x *ChairNotificationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChairNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChairNotificationResponse) Reset() {
	*x = ChairNotificationResponse{}
	mi := &file_isuride_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChairNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChairNotificationResponse) ProtoMessage() {}

func (x *ChairNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChairNotificationResponse.ProtoReflect.Descriptor instead.
func (*ChairNotificationResponse) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{3}
}

type MinCostFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chairs        []*MatchableChair      `protobuf:"bytes,1,rep,name=chairs,proto3" json:"chairs,omitempty"`
	Rides         []*MatchableRide       `protobuf:"bytes,2,rep,name=rides,proto3" json:"rides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinCostFlowRequest) Reset() {
	*x = MinCostFlowRequest{}
	mi := &file_isuride_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinCostFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinCostFlowRequest) ProtoMessage() {}

func (x *MinCostFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinCostFlowRequest.ProtoReflect.Descriptor instead.
func (*MinCostFlowRequest) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{4}
}

func (x *MinCostFlowRequest) GetChairs() []*MatchableChair {
	if x != nil {
		return x.Chairs
	}
	return nil
}

func (x *MinCostFlowRequest) GetRides() []*MatchableRide {
	if x != nil {
		return x.Rides
	}
	return nil
}

type MinCostFlowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideChairs    []*RideChair           `protobuf:"bytes,1,rep,name=rideChairs,proto3" json:"rideChairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinCostFlowResponse) Reset() {
	*x = MinCostFlowResponse{}
	mi := &file_isuride_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinCostFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinCostFlowResponse) ProtoMessage() {}

func (x *MinCostFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinCostFlowResponse.ProtoReflect.Descriptor instead.
func (*MinCostFlowResponse) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{5}
}

func (x *MinCostFlowResponse) GetRideChairs() []*RideChair {
	if x != nil {
		return x.RideChairs
	}
	return nil
}

type StoreUserTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreUserTokenRequest) Reset() {
	*x = StoreUserTokenRequest{}
	mi := &file_isuride_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreUserTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreUserTokenRequest) ProtoMessage() {}

func (x *StoreUserTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreUserTokenRequest.ProtoReflect.Descriptor instead.
func (*StoreUserTokenRequest) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{6}
}

func (x *StoreUserTokenRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *StoreUserTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type StoreUserTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreUserTokenResponse) Reset() {
	*x = StoreUserTokenResponse{}
	mi := &file_isuride_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreUserTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreUserTokenResponse) ProtoMessage() {}

func (x *StoreUserTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreUserTokenResponse.ProtoReflect.Descriptor instead.
func (*StoreUserTokenResponse) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{7}
}

type StoreChairTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChairID       string                 `protobuf:"bytes,1,opt,name=chairID,proto3" json:"chairID,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChairTokenRequest) Reset() {
	*x = StoreChairTokenRequest{}
	mi := &file_isuride_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChairTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChairTokenRequest) ProtoMessage() {}

func (x *StoreChairTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChairTokenRequest.ProtoReflect.Descriptor instead.
func (*StoreChairTokenRequest) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{8}
}

func (x *StoreChairTokenRequest) GetChairID() string {
	if x != nil {
		return x.ChairID
	}
	return ""
}

func (x *StoreChairTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type StoreChairTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChairTokenResponse) Reset() {
	*x = StoreChairTokenResponse{}
	mi := &file_isuride_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChairTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChairTokenResponse) ProtoMessage() {}

func (x *StoreChairTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChairTokenResponse.ProtoReflect.Descriptor instead.
func (*StoreChairTokenResponse) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{9}
}

type MatchableChair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Coordinate    *Coordinate            `protobuf:"bytes,3,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchableChair) Reset() {
	*x = MatchableChair{}
	mi := &file_isuride_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchableChair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchableChair) ProtoMessage() {}

func (x *MatchableChair) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchableChair.ProtoReflect.Descriptor instead.
func (*MatchableChair) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{10}
}

func (x *MatchableChair) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchableChair) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MatchableChair) GetCoordinate() *Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *MatchableChair) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MatchableRide struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coordinate    *Coordinate            `protobuf:"bytes,2,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchableRide) Reset() {
	*x = MatchableRide{}
	mi := &file_isuride_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchableRide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchableRide) ProtoMessage() {}

func (x *MatchableRide) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchableRide.ProtoReflect.Descriptor instead.
func (*MatchableRide) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{11}
}

func (x *MatchableRide) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchableRide) GetCoordinate() *Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

type RideChair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideID        string                 `protobuf:"bytes,1,opt,name=rideID,proto3" json:"rideID,omitempty"`
	ChairID       string                 `protobuf:"bytes,2,opt,name=chairID,proto3" json:"chairID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RideChair) Reset() {
	*x = RideChair{}
	mi := &file_isuride_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RideChair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideChair) ProtoMessage() {}

func (x *RideChair) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideChair.ProtoReflect.Descriptor instead.
func (*RideChair) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{12}
}

func (x *RideChair) GetRideID() string {
	if x != nil {
		return x.RideID
	}
	return ""
}

func (x *RideChair) GetChairID() string {
	if x != nil {
		return x.ChairID
	}
	return ""
}

type Coordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      int32                  `protobuf:"varint,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     int32                  `protobuf:"varint,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	mi := &file_isuride_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{13}
}

func (x *Coordinate) GetLatitude() int32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Coordinate) GetLongitude() int32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type Chair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Stats         *ChairStats            `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chair) Reset() {
	*x = Chair{}
	mi := &file_isuride_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chair) ProtoMessage() {}

func (x *Chair) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chair.ProtoReflect.Descriptor instead.
func (*Chair) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{14}
}

func (x *Chair) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chair) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chair) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Chair) GetStats() *ChairStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ChairStats struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalRidesCount    int32                  `protobuf:"varint,1,opt,name=totalRidesCount,proto3" json:"totalRidesCount,omitempty"`
	TotalEvaluationAvg int32                  `protobuf:"varint,2,opt,name=totalEvaluationAvg,proto3" json:"totalEvaluationAvg,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChairStats) Reset() {
	*x = ChairStats{}
	mi := &file_isuride_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChairStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChairStats) ProtoMessage() {}

func (x *ChairStats) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChairStats.ProtoReflect.Descriptor instead.
func (*ChairStats) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{15}
}

func (x *ChairStats) GetTotalRidesCount() int32 {
	if x != nil {
		return x.TotalRidesCount
	}
	return 0
}

func (x *ChairStats) GetTotalEvaluationAvg() int32 {
	if x != nil {
		return x.TotalEvaluationAvg
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_isuride_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_isuride_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_isuride_proto_rawDescGZIP(), []int{16}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_isuride_proto protoreflect.FileDescriptor

var file_isuride_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x10, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x10, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x15,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x73,
	0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x52, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x72, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf9,
	0x01, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x69, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x15, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x68,
	0x61, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x12, 0x4d, 0x69, 0x6e, 0x43, 0x6f,
	0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x72, 0x73, 0x12, 0x2c,
	0x0a, 0x05, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x05, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x13,
	0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x72, 0x69, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x73, 0x75,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x0d, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22,
	0x3d, 0x0a, 0x09, 0x52, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x69, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x44, 0x22, 0x46,
	0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x69, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x69, 0x64, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x69, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x76, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x67, 0x22, 0x2a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xb1, 0x03, 0x0a, 0x0a, 0x53, 0x75, 0x62,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x69, 0x73, 0x75,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x73,
	0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x4d, 0x69, 0x6e,
	0x43, 0x6f, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1b, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x4d, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x73, 0x75, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x69, 0x73, 0x75, 0x72,
	0x69, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x73, 0x75,
	0x72, 0x69, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x69, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_isuride_proto_rawDescOnce sync.Once
	file_isuride_proto_rawDescData = file_isuride_proto_rawDesc
)

func file_isuride_proto_rawDescGZIP() []byte {
	file_isuride_proto_rawDescOnce.Do(func() {
		file_isuride_proto_rawDescData = protoimpl.X.CompressGZIP(file_isuride_proto_rawDescData)
	})
	return file_isuride_proto_rawDescData
}

var file_isuride_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_isuride_proto_goTypes = []any{
	(*AppNotificationRequest)(nil),    // 0: isuride.AppNotificationRequest
	(*AppNotificationResponse)(nil),   // 1: isuride.AppNotificationResponse
	(*ChairNotificationRequest)(nil),  // 2: isuride.ChairNotificationRequest
	(*ChairNotificationResponse)(nil), // 3: isuride.ChairNotificationResponse
	(*MinCostFlowRequest)(nil),        // 4: isuride.MinCostFlowRequest
	(*MinCostFlowResponse)(nil),       // 5: isuride.MinCostFlowResponse
	(*StoreUserTokenRequest)(nil),     // 6: isuride.StoreUserTokenRequest
	(*StoreUserTokenResponse)(nil),    // 7: isuride.StoreUserTokenResponse
	(*StoreChairTokenRequest)(nil),    // 8: isuride.StoreChairTokenRequest
	(*StoreChairTokenResponse)(nil),   // 9: isuride.StoreChairTokenResponse
	(*MatchableChair)(nil),            // 10: isuride.MatchableChair
	(*MatchableRide)(nil),             // 11: isuride.MatchableRide
	(*RideChair)(nil),                 // 12: isuride.RideChair
	(*Coordinate)(nil),                // 13: isuride.Coordinate
	(*Chair)(nil),                     // 14: isuride.Chair
	(*ChairStats)(nil),                // 15: isuride.ChairStats
	(*User)(nil),                      // 16: isuride.User
}
var file_isuride_proto_depIdxs = []int32{
	13, // 0: isuride.AppNotificationRequest.pickupCoordinate:type_name -> isuride.Coordinate
	13, // 1: isuride.AppNotificationRequest.destinationCoordinate:type_name -> isuride.Coordinate
	14, // 2: isuride.AppNotificationRequest.chair:type_name -> isuride.Chair
	16, // 3: isuride.ChairNotificationRequest.user:type_name -> isuride.User
	13, // 4: isuride.ChairNotificationRequest.pickupCoordinate:type_name -> isuride.Coordinate
	13, // 5: isuride.ChairNotificationRequest.destinationCoordinate:type_name -> isuride.Coordinate
	10, // 6: isuride.MinCostFlowRequest.chairs:type_name -> isuride.MatchableChair
	11, // 7: isuride.MinCostFlowRequest.rides:type_name -> isuride.MatchableRide
	12, // 8: isuride.MinCostFlowResponse.rideChairs:type_name -> isuride.RideChair
	13, // 9: isuride.MatchableChair.coordinate:type_name -> isuride.Coordinate
	13, // 10: isuride.MatchableRide.coordinate:type_name -> isuride.Coordinate
	15, // 11: isuride.Chair.stats:type_name -> isuride.ChairStats
	0,  // 12: isuride.SubService.AppNotification:input_type -> isuride.AppNotificationRequest
	2,  // 13: isuride.SubService.ChairNotification:input_type -> isuride.ChairNotificationRequest
	4,  // 14: isuride.SubService.MinCostFlow:input_type -> isuride.MinCostFlowRequest
	6,  // 15: isuride.SubService.StoreUserToken:input_type -> isuride.StoreUserTokenRequest
	8,  // 16: isuride.SubService.StoreChairToken:input_type -> isuride.StoreChairTokenRequest
	1,  // 17: isuride.SubService.AppNotification:output_type -> isuride.AppNotificationResponse
	3,  // 18: isuride.SubService.ChairNotification:output_type -> isuride.ChairNotificationResponse
	5,  // 19: isuride.SubService.MinCostFlow:output_type -> isuride.MinCostFlowResponse
	7,  // 20: isuride.SubService.StoreUserToken:output_type -> isuride.StoreUserTokenResponse
	9,  // 21: isuride.SubService.StoreChairToken:output_type -> isuride.StoreChairTokenResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_isuride_proto_init() }
func file_isuride_proto_init() {
	if File_isuride_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_isuride_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_isuride_proto_goTypes,
		DependencyIndexes: file_isuride_proto_depIdxs,
		MessageInfos:      file_isuride_proto_msgTypes,
	}.Build()
	File_isuride_proto = out.File
	file_isuride_proto_rawDesc = nil
	file_isuride_proto_goTypes = nil
	file_isuride_proto_depIdxs = nil
}
